pipeline {
    agent any

    parameters {
        string(name: 'name', defaultValue: 'vpc', description: 'enter name of your vpc')
        string(name: 'project', defaultValue: 'testing', description: 'enter your project name')
        string(name: 'environment', defaultValue: 'dev', description: 'mention env name')
        string(name: 'region', defaultValue: 'ap-south--1', description: 'mention resource creation region')
        string(name: 'cidr_block', defaultValue: '10.0.0.0/16', description: 'enter the cidr for vpc')
        string(name: 'availability_zone_one', defaultValue: 'ap-south-1a', description: 'enter the az1')
        string(name: 'availability_zone_two', defaultValue: 'ap-south-1b', description: 'enter the az2')
        string(name: 'public_subnet_a_cidr_blocks', defaultValue: '10.0.0.0/24', description: 'enter cidr for public subnet 1a')
        string(name: 'public_subnet_b_cidr_blocks', defaultValue: '10.0.1.0/24', description: 'enter cidr for public subnet 1b')
        string(name: 'private_subnet_a_cidr_blocks', defaultValue: '10.0.2.0/24', description: 'enter cidr for pvt subnet 1a')
        string(name: 'private_subnet_b_cidr_blocks', defaultValue: '10.0.3.0/24', description: 'enter cidr for pvt subnet 1b')
    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION    = 'ap-south-1'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/juleshkumar/jenkins-test.git'
            }
        }
        stage('Terraform init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Plan') {
            steps {
                sh 'terraform plan -out tfplan'
                sh 'terraform show -no-color tfplan > tfplan.txt'

            }
        }
        
        stage('terraform apply'){
            steps{
                 sh "terraform apply
                    -var 'name=${params.name}' --auto-approve"
                    -var 'region=${params.region}' --auto-approve"
                    -var 'project=${params.project}' --auto-approve"
                    -var 'environment=${params.environment}' --auto-approve"
                    -var 'cidr_block=${params.cidr_block}' --auto-approve"
                    -var 'availability_zone_one=${params.availability_zone_one}' --auto-approve"
                    -var 'availability_zone_two=${params.availability_zone_two}' --auto-approve"
                    -var 'public_subnet_a_cidr_blocks=${params.public_subnet_a_cidr_blocks}' --auto-approve"
                    -var 'public_subnet_b_cidr_blocks=${params.public_subnet_b_cidr_blocks}' --auto-approve"
                    -var 'private_subnet_a_cidr_blocks=${params.private_subnet_a_cidr_blocks}' --auto-approve"
                    -var 'private_subnet_b_cidr_blocks=${params.private_subnet_b_cidr_blocks}' --auto-approve"
            }
        }
        stage('terraform destroy'){
            steps{
              sh "terraform destroy 
                    -var 'name=${params.name}' --auto-approve"
                    -var 'region=${params.region}' --auto-approve"
                    -var 'project=${params.project}' --auto-approve"
                    -var 'environment=${params.environment}' --auto-approve"
                    -var 'cidr_block=${params.cidr_block}' --auto-approve"
                    -var 'availability_zone_one=${params.availability_zone_one}' --auto-approve"
                    -var 'availability_zone_two=${params.availability_zone_two}' --auto-approve"
                    -var 'public_subnet_a_cidr_blocks=${params.public_subnet_a_cidr_blocks}' --auto-approve"
                    -var 'public_subnet_b_cidr_blocks=${params.public_subnet_b_cidr_blocks}' --auto-approve"
                    -var 'private_subnet_a_cidr_blocks=${params.private_subnet_a_cidr_blocks}' --auto-approve"
                    -var 'private_subnet_b_cidr_blocks=${params.private_subnet_b_cidr_blocks}' --auto-approve"
            }
        }
    }
}
